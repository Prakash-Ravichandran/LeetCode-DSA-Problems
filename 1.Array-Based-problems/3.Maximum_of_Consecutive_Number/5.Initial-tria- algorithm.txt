// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
     static int[] repition_count = {}; 
     static int[] nums = {1,0,1,1,0,1};
     static int no_Of_Times = 0;
    
    
      public static int ConsecutiveCheck(int a, int b){
      
       // int difference = 0;
        int one = 1;
        int actualDiff = b-a;
        if( actualDiff == 0){
          
            no_Of_Times =  no_Of_Times + 1 ;
            return no_Of_Times;
        }
        else {
        return no_Of_Times;
        }
    }
    
    public static void main(String[] args) {
        int count =0;
        for(int i=0, j=1; j <nums.length; i++, j++){
           count = ConsecutiveCheck(nums[i],nums[j]);
        }
        no_Of_Times = count;
        System.out.println(" \n The count of reptition is ="+ no_Of_Times);
    }
}

====================================================================================

new code 

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
     static int[] nums = {1,0,1,1,0,1};
     static int no_Of_Times = 0;
    
      public static int[] ConsecutiveCheck(int a, int b,int iterator, int length){
        int[] repetition_count = new int[length];   
        if( (a == 1 && b ==1)){
            no_Of_Times =  no_Of_Times + 1 ;
        }
        else {
         repetition_count[iterator-1] = no_Of_Times;
         no_Of_Times = 0; 
        }
        return  repetition_count;
    }
    
    public static void main(String[] args) {
        int count[] ={};
        for(int i=0, j=1; j <nums.length; i++, j++){
           count = ConsecutiveCheck(nums[i],nums[j],j, nums.length);
        }
        System.out.println(" \n The count of reptition is =" +count);
    }
}


===========================================================================

new code-----------------------

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
     static int[] nums = {1,0,1,1,0,1};
     static int no_Of_Times = 0;
    
      public static int[] ConsecutiveCheck(int a, int b,int iterator, int length){
        int[] repetition_count = new int[length];   
        if( (a == 1 && b ==1)){
            no_Of_Times =  no_Of_Times + 1 ;
        }
        else {
         repetition_count[iterator-1] = no_Of_Times;
         no_Of_Times = 0; 
        }
        return  repetition_count;
    }
    
    public static void main(String[] args) {
        int count[] = new int[nums.length];
        for(int i=0, j=1; j <nums.length; i++, j++){
           count = ConsecutiveCheck(nums[i],nums[j],j, nums.length);
        }
        for(int i=0; i <count.length; i++){
            System.out.println(count[i]);
        }
    }
}


=================================================== code at 12.30pm
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.Arrays;
import java.util.*;  

class HelloWorld {
    
     //static int[] nums = {1,1,0,1,1,1};
     static int[] nums = {1,0,1,1,0,1};
     static int no_Of_Times =0;
     static List<Integer> list=new ArrayList<Integer>();
    
      public static void ConsecutiveCheck(int a, int b,int iterator, int length){
         
        if( (a == 1 && b ==1)){
            no_Of_Times =  no_Of_Times + 1 ;
            list.add(no_Of_Times);
        }
        else {
        list.add(0);
        no_Of_Times = 0; 
        }
    }
    
    public static void main(String[] args) {
        
        for(int i=0, j=1; j <nums.length; i++, j++){
         ConsecutiveCheck(nums[i],nums[j],j, nums.length);
        }
        
        for(int i=0; i <list.size(); i++){
            System.out.println(list.get(i));
        }
         int max = Collections.max(list);
         System.out.println("maximum no.of consecutive one's are=" +max);
    }
}

============================================================== code at 13.22 pm

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;  


class HelloWorld {
    
  //  static int nums[] = {1,1,0,1,1,1};
    static int nums[] = {1,0,1,1,0,1};
    static int no_of_consecutive_ones = 0;
    static List<Integer> list = new ArrayList<Integer>();
    
    public static void main(String[] args) {
         for(int i=0;i< nums.length; i++){
             
        while(i+1 < nums.length && ((nums[i+1]==1) && (nums[i] == 1)) ){
           // no_of_consecutive_ones = nums[i] + nums[i+1];
            // list.add(no_of_consecutive_ones);
            // i++;
            int count = 0;
             no_of_consecutive_ones = nums[i] + nums[i+1];
             list.add(no_of_consecutive_ones);
             i++;
            }
         }
         System.out.println(list);    }
}

================================================

solution at 5.30pm

import java.util.*;

class Solution {
    
    int sum = 0;
    int max =0;
    List<Integer> list = new ArrayList<Integer>();
    
    public int findMaxConsecutiveOnes(int[] nums) {
        for(int i : nums){
             if( i == 1 ){
             sum++;
             list.add(sum);
             max = Math.max(sum,max);
            }
            else{
                sum =0;
            }
         }
        return max;
    }
}


========================================

final solution at 5.44pm

import java.util.*;

class Solution {
    
    int sum = 0;
    int max =0;
    
    public int findMaxConsecutiveOnes(int[] nums) {
        for(int i : nums){
             if( i == 1 ){
             sum++;
             max = Math.max(sum,max);
            }
            else{
                sum =0;
            }
         }
        return max;
    }
}