// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
   // static int[] nums = {1,3,5,4,7};
    static int[] nums = {2,2,2,2,2};
    static int[] subArr = new int[nums.length];
    
    public static int[] subSequence(int[] nums, int breakPlace){
     System.out.println("break-Place index is="+breakPlace);
     for(int i=0; i < breakPlace; i++){
         subArr[i] = nums[i];
     }
     
     return subArr;   
    }
    
    public static void main(String[] args) {
       for( int i=0,j=1; j < nums.length; i++,j++){
            if(nums[j] < nums[i]){
                 System.out.println("break-Place index is="+i);
                 int[] subArr = subSequence(nums,i);
            }
            else if(nums[j] == nums[i]){
                 System.out.println("hello-world-5555555555");
            }
            else{
                System.out.println("hello-world");
            }
       }
      for(int x : subArr){
          System.out.println(x);
      }
    }
}

========================================================-====================
Modified code at 12.08 PM - 09-08-2022:

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
  //  static int[] nums = {1,3,5,4,7};
    static int[] nums = {2,2,2,2,2};
    
    
    public static int subSequence(int[] nums, int breakPlace){
     System.out.println("break-Place index is="+breakPlace);
     
     int[] subArr = new int[breakPlace];
     for(int i=0; i < breakPlace; i++){
         subArr[i] = nums[i];
     }
     
     return subArr.length;   
    }
    
    public static int subSequenceSingle(int[] nums, int breakPlace){
     int[] subArr = new int[1];
     
    for(int i=0; i < 1; i++){
         subArr[i] = nums[i];
    }
    return subArr.length;   
    }
    
    public static void main(String[] args) {
        
       for( int i=0,j=1; j < nums.length; i++,j++){
            if(nums[j] < nums[i]){
                 System.out.println("break-Place index is="+i);
                 int subArr = subSequence(nums,i);
            }
            else if(nums[j] == nums[i]){
                 System.out.println("The nums "+nums[i]+" &"+nums[j]+"are equal");
                 int subArr = subSequenceSingle(nums,i);
            }
            else{
                System.out.println("else-block");
            }
       }
    }
}

================================================================

New Code at 12.21 PM 09-08-2022

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
  static int[] nums = {1,3,5,4,7};
    //static int[] nums = {2,2,2,2,2};
    
    
    public static int subSequence(int[] nums, int breakPlace){
     System.out.println("break-Place index is="+breakPlace);
     
     int[] subArr = new int[breakPlace];
     for(int i=0; i < breakPlace; i++){
         subArr[i] = nums[i];
     }
     
     System.out.println("Length of array is"+subArr.length);
     for(int x: subArr){
         System.out.println(x);
     }
     return subArr.length;   
    }
    
    public static int subSequenceSingle(int[] nums, int breakPlace){
     int[] subArr = new int[1];
     
    for(int i=0; i < 1; i++){
         subArr[i] = nums[i];
    }
    return subArr.length;   
    }
    
    public static void main(String[] args) {
        
       for( int i=0,j=1; j < nums.length; i++,j++){
            if(nums[j] < nums[i]){
                 System.out.println("break-Place index is="+i);
                 int subArr = subSequence(nums,i+1);
            }
            else if(nums[j] == nums[i]){
                 System.out.println("The nums "+nums[i]+" &"+nums[j]+"are equal");
                 int subArr = subSequenceSingle(nums,i);
            }
            else{
                System.out.println("else-block");
            }
       }
    }
}


============================================
New Code at 12.51 PM 

class Solution {
    
     public int subSequence(int[] nums, int breakPlace){
    // System.out.println("break-Place index is="+breakPlace);
     int[] subArr = new int[breakPlace];
     for(int i=0; i < breakPlace; i++){
         subArr[i] = nums[i];
     }
     
     return subArr.length;   
    }
    
    
    public int subSequenceSingle(int[] nums, int breakPlace){
     int[] subArr = new int[1];
     
    for(int i=0; i < 1; i++){
         subArr[i] = nums[i];
    }
    return subArr.length;   
    }
    
    
    public int findLengthOfLCIS(int[] nums) {
        int length2  = 0;
        
        if(nums.length > 1){
              
        for( int i=0,j=1; j < nums.length; i++,j++){
            
            if(nums[j] < nums[i]){
                 System.out.println("break-Place index is="+i);
                 length2 = subSequence(nums,i+1);
                 break;
            }
            else if(nums[j] == nums[i]){
                // System.out.println("The nums "+nums[i]+" &"+nums[j]+"are equal");
                 length2  = subSequenceSingle(nums,i);
                
            }
            else if(nums[j] > nums[i]){
          
                 if( j == nums.length-1) {
                     length2 = nums.length;
                 }
                 else {
                   // System.out.println("hellohggggggggg");
                 }   
            }
            
         }
        }
         else if(nums.length == 1){
                length2 = 1;
            }
      
        return length2;
    }
}